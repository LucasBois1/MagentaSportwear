#pragma checksum "D:\Development\C#\MagentaGithub\MagentaSportwear\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "226fe40ec036f9de5e45f6550ab9ce9dc5516892"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Development\C#\MagentaGithub\MagentaSportwear\Views\_ViewImports.cshtml"
using MagentaSportwear;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Development\C#\MagentaGithub\MagentaSportwear\Views\_ViewImports.cshtml"
using MagentaSportwear.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"226fe40ec036f9de5e45f6550ab9ce9dc5516892", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a3f25fbdd4550a61b7edbbba3e9deb6c576aa763", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Imagenes/SampleCarrousel.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("d-block rounded img-fluid"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("..."), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Development\C#\MagentaGithub\MagentaSportwear\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<center>

    <!-- Main Carrousel -->
    <div class=""text-center user-select-none"">
        <div id=""carouselExampleIndicators"" class=""carousel slide"" data-bs-ride=""carousel"">
            <div class=""carousel-inner"">
                <div class=""carousel-item active"">
                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "226fe40ec036f9de5e45f6550ab9ce9dc55168924660", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                </div>\r\n                <div class=\"carousel-item\">\r\n                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "226fe40ec036f9de5e45f6550ab9ce9dc55168925952", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                </div>\r\n                <div class=\"carousel-item\">\r\n                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "226fe40ec036f9de5e45f6550ab9ce9dc55168927244", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                </div>
            </div>
            <button class=""carousel-control-prev"" type=""button"" data-bs-target=""#carouselExampleIndicators"" data-bs-slide=""prev"">
                <a href=""#gamespandp"" data-slide=""prev"" class=""btn btn-outline-secondary btn-sm"">&#10094;</a>
                <span class=""visually-hidden"">Previous</span>
            </button>
            <button class=""carousel-control-next"" type=""button"" data-bs-target=""#carouselExampleIndicators"" data-bs-slide=""next"">
                <a href=""#gamespandp"" data-slide=""next"" class=""btn btn-outline-secondary btn-sm"">&#10095;</a>
                <span class=""visually-hidden"">Next</span>
            </button>
        </div>
    </div>

    <br />

    <!-- Main Cards -->
    <div class=""row align-items-center justify-content-center user-select-none"" style=""margin: 5%; padding: 2%;"">
        <!-- Card 1 -->
        <div class=""card mb-3 col container-fluid"" style=""max-width: 400px; max-height: 300px; margin: 1%"">
        ");
            WriteLiteral(@"    <div class=""row g-0"">
                <div class=""col-md-4"">
                    <img src=""https://img.icons8.com/material-rounded/100/000000/security-checked.png"" alt=""..."" width=""50"" height=""50"" style=""margin-top: 13%"">
                </div>
                <div class=""col-md-7"">
                    <div class=""card-body"">
                        <h5 class=""card-title""> Pago seguro </h5>
                        <p class=""card-text""> Pagos 100% seguros </p>
                    </div>
                </div>
            </div>
        </div>
        <!-- Card 2 -->
        <div class=""card mb-3 col container-fluid"" style=""max-width: 400px; max-height: 300px; margin: 1%"">
            <div class=""row g-0"">
                <div class=""col-md-4"">
                    <img src=""https://img.icons8.com/ios-filled/100/000000/gift--v1.png"" alt=""..."" width=""45"" height=""45"" style=""margin-top: 13%"">
                </div>
                <div class=""col-md-7"">
                    <div class=""card-bo");
            WriteLiteral(@"dy"">
                        <h5 class=""card-title"">Tarjetas de regalo</h5>
                        <p class=""card-text"">Haz el regalo perfecto</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- New Products Cards-->
    <h2 class=""user-select-none"">Prendas nuevas</h2>

    <br />

    <div class=""row align-items-center justify-content-center user-select-none"">
        <!-- Product 1 -->
        <div class=""card col"" style=""max-width: 300px; margin: 2%"">
            <center><img src=""https://via.placeholder.com/250x200/FFFFFF/00000?text=Product"" alt=""Alternate Text"" class=""container-fluid"" /></center>
            <div class=""card-body"">
                <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                <button class=""btn"" style=""background-color: #667eea; color: white;"">Ver <svg xmlns=""http://www.w3.org/2000/svg"" x=""0px"" y=""0px""
                 wi");
            WriteLiteral("dth=\"16\" height=\"16\"\r\n                 viewBox=\"0 0 172 172\"\r\n                 style=\" fill:#000000;\">\r\n                <g fill=\"none\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\"");
            BeginWriteAttribute("stroke-dasharray", " stroke-dasharray=\"", 4109, "\"", 4128, 0);
            EndWriteAttribute();
            WriteLiteral(@" stroke-dashoffset=""0"" font-family=""none"" font-weight=""none"" font-size=""none"" text-anchor=""none"" style=""mix-blend-mode: normal""><path d=""M0,172v-172h172v172z"" fill=""none""></path><g id=""original-icon"" fill=""#ffffff""><path d=""M112.875,10.75c-26.66504,0 -48.375,21.70996 -48.375,48.375c0,11.37989 4.11524,21.75196 10.75,30.02442l-53.49804,53.49804l7.55859,7.64258l53.54003,-53.54004c8.27247,6.63477 18.64453,10.75 30.02442,10.75c26.66504,0 48.375,-21.70996 48.375,-48.375c0,-26.66504 -21.70996,-48.375 -48.375,-48.375zM112.875,21.5c20.82813,0 37.625,16.79688 37.625,37.625c0,20.82813 -16.79687,37.625 -37.625,37.625c-20.82812,0 -37.625,-16.79687 -37.625,-37.625c0,-20.82812 16.79688,-37.625 37.625,-37.625z""></path></g></g></svg></button>
                <button class=""btn"" style=""background-color: #667eea; color: white;"">Agregar <svg xmlns=""http://www.w3.org/2000/svg"" x=""0px"" y=""0px""
                 width=""16"" height=""16""
                 viewBox=""0 0 172 172""
                 style="" fill:#000000;"">
              ");
            WriteLiteral("  <g fill=\"none\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\"");
            BeginWriteAttribute("stroke-dasharray", " stroke-dasharray=\"", 5289, "\"", 5308, 0);
            EndWriteAttribute();
            WriteLiteral(@" stroke-dashoffset=""0"" font-family=""none"" font-weight=""none"" font-size=""none"" text-anchor=""none"" style=""mix-blend-mode: normal""><path d=""M0,172v-172h172v172z"" fill=""none""></path><g fill=""#ffffff""><path d=""M10.75,10.75v10.75h21.5c2.30957,0 4.28321,1.51172 5.03906,3.69531l10.03614,89.52734c0.92382,8.14649 7.89453,14.31933 16.04101,14.31933c-5.45898,0.5879 -9.61621,5.20703 -9.61621,10.70801c0,5.9209 4.8291,10.75 10.75,10.75c5.9209,0 10.75,-4.8291 10.75,-10.75c0,-5.50098 -4.19922,-10.12011 -9.6582,-10.70801h51.52441c-5.45898,0.5879 -9.61621,5.20703 -9.61621,10.70801c0,5.9209 4.8291,10.75 10.75,10.75c5.9209,0 10.75,-4.8291 10.75,-10.75c0,-5.50098 -4.19922,-10.12011 -9.7002,-10.70801h9.7002v-10.75h-65.63379c-2.77148,0 -5.03906,-1.97362 -5.333,-4.74511l-0.67187,-6.04687h68.19531c7.64257,0 14.31933,-5.45898 15.83105,-12.93359l10.28808,-51.56641h-11.92578v4.87109l-8.90234,44.55371c-0.5459,2.56153 -2.6875,4.3252 -5.29101,4.3252h-69.45508l-8.31445,-74.1582l-0.16797,-0.50391c-2.05763,-6.71875 -8.31446,-11.3379 -15.36915,");
            WriteLiteral(@"-11.3379zM86,21.5v21.5h-21.5v10.75h21.5v21.5h10.75v-21.5h21.5v-10.75h-21.5v-21.5z""></path></g></g></svg></button>
            </div>
        </div>
        <!-- Product 2 -->
        <div class=""card col"" style=""max-width: 300px; margin: 2%"">
            <center><img src=""https://via.placeholder.com/250x200/FFFFFF/00000?text=Product"" alt=""Alternate Text"" class=""container-fluid"" /></center>
            <div class=""card-body"">
                <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                <button class=""btn"" style=""background-color: #667eea; color: white;"">Ver <svg xmlns=""http://www.w3.org/2000/svg"" x=""0px"" y=""0px""
                 width=""16"" height=""16""
                 viewBox=""0 0 172 172""
                 style="" fill:#000000;"">
                <g fill=""none"" fill-rule=""nonzero"" stroke=""none"" stroke-width=""1"" stroke-linecap=""butt"" stroke-linejoin=""miter"" stroke-miterlimit=""10""");
            BeginWriteAttribute("stroke-dasharray", " stroke-dasharray=\"", 7325, "\"", 7344, 0);
            EndWriteAttribute();
            WriteLiteral(@" stroke-dashoffset=""0"" font-family=""none"" font-weight=""none"" font-size=""none"" text-anchor=""none"" style=""mix-blend-mode: normal""><path d=""M0,172v-172h172v172z"" fill=""none""></path><g id=""original-icon"" fill=""#ffffff""><path d=""M112.875,10.75c-26.66504,0 -48.375,21.70996 -48.375,48.375c0,11.37989 4.11524,21.75196 10.75,30.02442l-53.49804,53.49804l7.55859,7.64258l53.54003,-53.54004c8.27247,6.63477 18.64453,10.75 30.02442,10.75c26.66504,0 48.375,-21.70996 48.375,-48.375c0,-26.66504 -21.70996,-48.375 -48.375,-48.375zM112.875,21.5c20.82813,0 37.625,16.79688 37.625,37.625c0,20.82813 -16.79687,37.625 -37.625,37.625c-20.82812,0 -37.625,-16.79687 -37.625,-37.625c0,-20.82812 16.79688,-37.625 37.625,-37.625z""></path></g></g></svg></button>
                <button class=""btn"" style=""background-color: #667eea; color: white;"">Agregar <svg xmlns=""http://www.w3.org/2000/svg"" x=""0px"" y=""0px""
                 width=""16"" height=""16""
                 viewBox=""0 0 172 172""
                 style="" fill:#000000;"">
              ");
            WriteLiteral("  <g fill=\"none\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\"");
            BeginWriteAttribute("stroke-dasharray", " stroke-dasharray=\"", 8505, "\"", 8524, 0);
            EndWriteAttribute();
            WriteLiteral(@" stroke-dashoffset=""0"" font-family=""none"" font-weight=""none"" font-size=""none"" text-anchor=""none"" style=""mix-blend-mode: normal""><path d=""M0,172v-172h172v172z"" fill=""none""></path><g fill=""#ffffff""><path d=""M10.75,10.75v10.75h21.5c2.30957,0 4.28321,1.51172 5.03906,3.69531l10.03614,89.52734c0.92382,8.14649 7.89453,14.31933 16.04101,14.31933c-5.45898,0.5879 -9.61621,5.20703 -9.61621,10.70801c0,5.9209 4.8291,10.75 10.75,10.75c5.9209,0 10.75,-4.8291 10.75,-10.75c0,-5.50098 -4.19922,-10.12011 -9.6582,-10.70801h51.52441c-5.45898,0.5879 -9.61621,5.20703 -9.61621,10.70801c0,5.9209 4.8291,10.75 10.75,10.75c5.9209,0 10.75,-4.8291 10.75,-10.75c0,-5.50098 -4.19922,-10.12011 -9.7002,-10.70801h9.7002v-10.75h-65.63379c-2.77148,0 -5.03906,-1.97362 -5.333,-4.74511l-0.67187,-6.04687h68.19531c7.64257,0 14.31933,-5.45898 15.83105,-12.93359l10.28808,-51.56641h-11.92578v4.87109l-8.90234,44.55371c-0.5459,2.56153 -2.6875,4.3252 -5.29101,4.3252h-69.45508l-8.31445,-74.1582l-0.16797,-0.50391c-2.05763,-6.71875 -8.31446,-11.3379 -15.36915,");
            WriteLiteral(@"-11.3379zM86,21.5v21.5h-21.5v10.75h21.5v21.5h10.75v-21.5h21.5v-10.75h-21.5v-21.5z""></path></g></g></svg></button>
            </div>
        </div>
        <!-- Product 3 -->
        <div class=""card col"" style=""max-width: 300px; margin: 2%"">
            <center><img src=""https://via.placeholder.com/250x200/FFFFFF/00000?text=Product"" alt=""Alternate Text"" class=""container-fluid"" /></center>
            <div class=""card-body"">
                <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                <button class=""btn"" style=""background-color: #667eea; color: white;"">Ver <svg xmlns=""http://www.w3.org/2000/svg"" x=""0px"" y=""0px""
                 width=""16"" height=""16""
                 viewBox=""0 0 172 172""
                 style="" fill:#000000;"">
                <g fill=""none"" fill-rule=""nonzero"" stroke=""none"" stroke-width=""1"" stroke-linecap=""butt"" stroke-linejoin=""miter"" stroke-miterlimit=""10""");
            BeginWriteAttribute("stroke-dasharray", " stroke-dasharray=\"", 10541, "\"", 10560, 0);
            EndWriteAttribute();
            WriteLiteral(@" stroke-dashoffset=""0"" font-family=""none"" font-weight=""none"" font-size=""none"" text-anchor=""none"" style=""mix-blend-mode: normal""><path d=""M0,172v-172h172v172z"" fill=""none""></path><g id=""original-icon"" fill=""#ffffff""><path d=""M112.875,10.75c-26.66504,0 -48.375,21.70996 -48.375,48.375c0,11.37989 4.11524,21.75196 10.75,30.02442l-53.49804,53.49804l7.55859,7.64258l53.54003,-53.54004c8.27247,6.63477 18.64453,10.75 30.02442,10.75c26.66504,0 48.375,-21.70996 48.375,-48.375c0,-26.66504 -21.70996,-48.375 -48.375,-48.375zM112.875,21.5c20.82813,0 37.625,16.79688 37.625,37.625c0,20.82813 -16.79687,37.625 -37.625,37.625c-20.82812,0 -37.625,-16.79687 -37.625,-37.625c0,-20.82812 16.79688,-37.625 37.625,-37.625z""></path></g></g></svg></button>
                <button class=""btn"" style=""background-color: #667eea; color: white;"">Agregar <svg xmlns=""http://www.w3.org/2000/svg"" x=""0px"" y=""0px""
                 width=""16"" height=""16""
                 viewBox=""0 0 172 172""
                 style="" fill:#000000;"">
              ");
            WriteLiteral("  <g fill=\"none\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\"");
            BeginWriteAttribute("stroke-dasharray", " stroke-dasharray=\"", 11721, "\"", 11740, 0);
            EndWriteAttribute();
            WriteLiteral(@" stroke-dashoffset=""0"" font-family=""none"" font-weight=""none"" font-size=""none"" text-anchor=""none"" style=""mix-blend-mode: normal""><path d=""M0,172v-172h172v172z"" fill=""none""></path><g fill=""#ffffff""><path d=""M10.75,10.75v10.75h21.5c2.30957,0 4.28321,1.51172 5.03906,3.69531l10.03614,89.52734c0.92382,8.14649 7.89453,14.31933 16.04101,14.31933c-5.45898,0.5879 -9.61621,5.20703 -9.61621,10.70801c0,5.9209 4.8291,10.75 10.75,10.75c5.9209,0 10.75,-4.8291 10.75,-10.75c0,-5.50098 -4.19922,-10.12011 -9.6582,-10.70801h51.52441c-5.45898,0.5879 -9.61621,5.20703 -9.61621,10.70801c0,5.9209 4.8291,10.75 10.75,10.75c5.9209,0 10.75,-4.8291 10.75,-10.75c0,-5.50098 -4.19922,-10.12011 -9.7002,-10.70801h9.7002v-10.75h-65.63379c-2.77148,0 -5.03906,-1.97362 -5.333,-4.74511l-0.67187,-6.04687h68.19531c7.64257,0 14.31933,-5.45898 15.83105,-12.93359l10.28808,-51.56641h-11.92578v4.87109l-8.90234,44.55371c-0.5459,2.56153 -2.6875,4.3252 -5.29101,4.3252h-69.45508l-8.31445,-74.1582l-0.16797,-0.50391c-2.05763,-6.71875 -8.31446,-11.3379 -15.36915,");
            WriteLiteral(@"-11.3379zM86,21.5v21.5h-21.5v10.75h21.5v21.5h10.75v-21.5h21.5v-10.75h-21.5v-21.5z""></path></g></g></svg></button>
            </div>
        </div>
        <!-- Product 4 -->
        <div class=""card col"" style=""max-width: 300px; margin: 2%"">
            <center><img src=""https://via.placeholder.com/250x200/FFFFFF/00000?text=Product"" alt=""Alternate Text"" class=""container-fluid"" /></center>
            <div class=""card-body"">
                <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                <button class=""btn"" style=""background-color: #667eea; color: white;"">Ver <svg xmlns=""http://www.w3.org/2000/svg"" x=""0px"" y=""0px""
                 width=""16"" height=""16""
                 viewBox=""0 0 172 172""
                 style="" fill:#000000;"">
                <g fill=""none"" fill-rule=""nonzero"" stroke=""none"" stroke-width=""1"" stroke-linecap=""butt"" stroke-linejoin=""miter"" stroke-miterlimit=""10""");
            BeginWriteAttribute("stroke-dasharray", " stroke-dasharray=\"", 13757, "\"", 13776, 0);
            EndWriteAttribute();
            WriteLiteral(@" stroke-dashoffset=""0"" font-family=""none"" font-weight=""none"" font-size=""none"" text-anchor=""none"" style=""mix-blend-mode: normal""><path d=""M0,172v-172h172v172z"" fill=""none""></path><g id=""original-icon"" fill=""#ffffff""><path d=""M112.875,10.75c-26.66504,0 -48.375,21.70996 -48.375,48.375c0,11.37989 4.11524,21.75196 10.75,30.02442l-53.49804,53.49804l7.55859,7.64258l53.54003,-53.54004c8.27247,6.63477 18.64453,10.75 30.02442,10.75c26.66504,0 48.375,-21.70996 48.375,-48.375c0,-26.66504 -21.70996,-48.375 -48.375,-48.375zM112.875,21.5c20.82813,0 37.625,16.79688 37.625,37.625c0,20.82813 -16.79687,37.625 -37.625,37.625c-20.82812,0 -37.625,-16.79687 -37.625,-37.625c0,-20.82812 16.79688,-37.625 37.625,-37.625z""></path></g></g></svg></button>
                <button class=""btn"" style=""background-color: #667eea; color: white;"">Agregar <svg xmlns=""http://www.w3.org/2000/svg"" x=""0px"" y=""0px""
                 width=""16"" height=""16""
                 viewBox=""0 0 172 172""
                 style="" fill:#000000;"">
              ");
            WriteLiteral("  <g fill=\"none\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\"");
            BeginWriteAttribute("stroke-dasharray", " stroke-dasharray=\"", 14937, "\"", 14956, 0);
            EndWriteAttribute();
            WriteLiteral(@" stroke-dashoffset=""0"" font-family=""none"" font-weight=""none"" font-size=""none"" text-anchor=""none"" style=""mix-blend-mode: normal""><path d=""M0,172v-172h172v172z"" fill=""none""></path><g fill=""#ffffff""><path d=""M10.75,10.75v10.75h21.5c2.30957,0 4.28321,1.51172 5.03906,3.69531l10.03614,89.52734c0.92382,8.14649 7.89453,14.31933 16.04101,14.31933c-5.45898,0.5879 -9.61621,5.20703 -9.61621,10.70801c0,5.9209 4.8291,10.75 10.75,10.75c5.9209,0 10.75,-4.8291 10.75,-10.75c0,-5.50098 -4.19922,-10.12011 -9.6582,-10.70801h51.52441c-5.45898,0.5879 -9.61621,5.20703 -9.61621,10.70801c0,5.9209 4.8291,10.75 10.75,10.75c5.9209,0 10.75,-4.8291 10.75,-10.75c0,-5.50098 -4.19922,-10.12011 -9.7002,-10.70801h9.7002v-10.75h-65.63379c-2.77148,0 -5.03906,-1.97362 -5.333,-4.74511l-0.67187,-6.04687h68.19531c7.64257,0 14.31933,-5.45898 15.83105,-12.93359l10.28808,-51.56641h-11.92578v4.87109l-8.90234,44.55371c-0.5459,2.56153 -2.6875,4.3252 -5.29101,4.3252h-69.45508l-8.31445,-74.1582l-0.16797,-0.50391c-2.05763,-6.71875 -8.31446,-11.3379 -15.36915,");
            WriteLiteral(@"-11.3379zM86,21.5v21.5h-21.5v10.75h21.5v21.5h10.75v-21.5h21.5v-10.75h-21.5v-21.5z""></path></g></g></svg></button>
            </div>
        </div>
    </div>

    <hr style=""margin: 5%; color: #F7F7F7;""/>

    <!-- Discount Products Cards-->
    <h2 class=""user-select-none"">Prendas en descuento</h2>

    <br />

    <div class=""row align-items-center justify-content-center user-select-none"">
        <!-- Product 1 -->
        <div class=""card col"" style=""max-width: 300px; margin: 2%"">
            <span class=""position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger""> -50% <span class=""visually-hidden"">Discount</span></span>
            <center><img src=""https://via.placeholder.com/200x200/FFFFFF/00000?text=Product"" alt=""Alternate Text"" class=""container-fluid"" /></center>
            <div class=""card-body"">
                <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                <button cla");
            WriteLiteral(@"ss=""btn"" style=""background-color: #667eea; color: white;"">Ver <svg xmlns=""http://www.w3.org/2000/svg"" x=""0px"" y=""0px""
                 width=""16"" height=""16""
                 viewBox=""0 0 172 172""
                 style="" fill:#000000;"">
                <g fill=""none"" fill-rule=""nonzero"" stroke=""none"" stroke-width=""1"" stroke-linecap=""butt"" stroke-linejoin=""miter"" stroke-miterlimit=""10""");
            BeginWriteAttribute("stroke-dasharray", " stroke-dasharray=\"", 17397, "\"", 17416, 0);
            EndWriteAttribute();
            WriteLiteral(@" stroke-dashoffset=""0"" font-family=""none"" font-weight=""none"" font-size=""none"" text-anchor=""none"" style=""mix-blend-mode: normal""><path d=""M0,172v-172h172v172z"" fill=""none""></path><g id=""original-icon"" fill=""#ffffff""><path d=""M112.875,10.75c-26.66504,0 -48.375,21.70996 -48.375,48.375c0,11.37989 4.11524,21.75196 10.75,30.02442l-53.49804,53.49804l7.55859,7.64258l53.54003,-53.54004c8.27247,6.63477 18.64453,10.75 30.02442,10.75c26.66504,0 48.375,-21.70996 48.375,-48.375c0,-26.66504 -21.70996,-48.375 -48.375,-48.375zM112.875,21.5c20.82813,0 37.625,16.79688 37.625,37.625c0,20.82813 -16.79687,37.625 -37.625,37.625c-20.82812,0 -37.625,-16.79687 -37.625,-37.625c0,-20.82812 16.79688,-37.625 37.625,-37.625z""></path></g></g></svg></button>
                <button class=""btn"" style=""background-color: #667eea; color: white;"">Agregar <svg xmlns=""http://www.w3.org/2000/svg"" x=""0px"" y=""0px""
                 width=""16"" height=""16""
                 viewBox=""0 0 172 172""
                 style="" fill:#000000;"">
              ");
            WriteLiteral("  <g fill=\"none\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\"");
            BeginWriteAttribute("stroke-dasharray", " stroke-dasharray=\"", 18577, "\"", 18596, 0);
            EndWriteAttribute();
            WriteLiteral(@" stroke-dashoffset=""0"" font-family=""none"" font-weight=""none"" font-size=""none"" text-anchor=""none"" style=""mix-blend-mode: normal""><path d=""M0,172v-172h172v172z"" fill=""none""></path><g fill=""#ffffff""><path d=""M10.75,10.75v10.75h21.5c2.30957,0 4.28321,1.51172 5.03906,3.69531l10.03614,89.52734c0.92382,8.14649 7.89453,14.31933 16.04101,14.31933c-5.45898,0.5879 -9.61621,5.20703 -9.61621,10.70801c0,5.9209 4.8291,10.75 10.75,10.75c5.9209,0 10.75,-4.8291 10.75,-10.75c0,-5.50098 -4.19922,-10.12011 -9.6582,-10.70801h51.52441c-5.45898,0.5879 -9.61621,5.20703 -9.61621,10.70801c0,5.9209 4.8291,10.75 10.75,10.75c5.9209,0 10.75,-4.8291 10.75,-10.75c0,-5.50098 -4.19922,-10.12011 -9.7002,-10.70801h9.7002v-10.75h-65.63379c-2.77148,0 -5.03906,-1.97362 -5.333,-4.74511l-0.67187,-6.04687h68.19531c7.64257,0 14.31933,-5.45898 15.83105,-12.93359l10.28808,-51.56641h-11.92578v4.87109l-8.90234,44.55371c-0.5459,2.56153 -2.6875,4.3252 -5.29101,4.3252h-69.45508l-8.31445,-74.1582l-0.16797,-0.50391c-2.05763,-6.71875 -8.31446,-11.3379 -15.36915,");
            WriteLiteral(@"-11.3379zM86,21.5v21.5h-21.5v10.75h21.5v21.5h10.75v-21.5h21.5v-10.75h-21.5v-21.5z""></path></g></g></svg></button>           
            </div>
        </div>
        <!-- Product 2 -->
        <div class=""card col"" style=""max-width: 300px; margin: 2%"">
            <span class=""position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger""> -75% <span class=""visually-hidden"">Discount</span></span>
            <center><img src=""https://via.placeholder.com/200x200/FFFFFF/00000?text=Product"" alt=""Alternate Text"" class=""container-fluid"" /></center>
            <div class=""card-body"">
                <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                <button class=""btn"" style=""background-color: #667eea; color: white;"">Ver <svg xmlns=""http://www.w3.org/2000/svg"" x=""0px"" y=""0px""
                 width=""16"" height=""16""
                 viewBox=""0 0 172 172""
                 style="" fill:#000000;"">
     ");
            WriteLiteral("           <g fill=\"none\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\"");
            BeginWriteAttribute("stroke-dasharray", " stroke-dasharray=\"", 20790, "\"", 20809, 0);
            EndWriteAttribute();
            WriteLiteral(@" stroke-dashoffset=""0"" font-family=""none"" font-weight=""none"" font-size=""none"" text-anchor=""none"" style=""mix-blend-mode: normal""><path d=""M0,172v-172h172v172z"" fill=""none""></path><g id=""original-icon"" fill=""#ffffff""><path d=""M112.875,10.75c-26.66504,0 -48.375,21.70996 -48.375,48.375c0,11.37989 4.11524,21.75196 10.75,30.02442l-53.49804,53.49804l7.55859,7.64258l53.54003,-53.54004c8.27247,6.63477 18.64453,10.75 30.02442,10.75c26.66504,0 48.375,-21.70996 48.375,-48.375c0,-26.66504 -21.70996,-48.375 -48.375,-48.375zM112.875,21.5c20.82813,0 37.625,16.79688 37.625,37.625c0,20.82813 -16.79687,37.625 -37.625,37.625c-20.82812,0 -37.625,-16.79687 -37.625,-37.625c0,-20.82812 16.79688,-37.625 37.625,-37.625z""></path></g></g></svg></button>
                <button class=""btn"" style=""background-color: #667eea; color: white;"">Agregar <svg xmlns=""http://www.w3.org/2000/svg"" x=""0px"" y=""0px""
                 width=""16"" height=""16""
                 viewBox=""0 0 172 172""
                 style="" fill:#000000;"">
              ");
            WriteLiteral("  <g fill=\"none\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\"");
            BeginWriteAttribute("stroke-dasharray", " stroke-dasharray=\"", 21970, "\"", 21989, 0);
            EndWriteAttribute();
            WriteLiteral(@" stroke-dashoffset=""0"" font-family=""none"" font-weight=""none"" font-size=""none"" text-anchor=""none"" style=""mix-blend-mode: normal""><path d=""M0,172v-172h172v172z"" fill=""none""></path><g fill=""#ffffff""><path d=""M10.75,10.75v10.75h21.5c2.30957,0 4.28321,1.51172 5.03906,3.69531l10.03614,89.52734c0.92382,8.14649 7.89453,14.31933 16.04101,14.31933c-5.45898,0.5879 -9.61621,5.20703 -9.61621,10.70801c0,5.9209 4.8291,10.75 10.75,10.75c5.9209,0 10.75,-4.8291 10.75,-10.75c0,-5.50098 -4.19922,-10.12011 -9.6582,-10.70801h51.52441c-5.45898,0.5879 -9.61621,5.20703 -9.61621,10.70801c0,5.9209 4.8291,10.75 10.75,10.75c5.9209,0 10.75,-4.8291 10.75,-10.75c0,-5.50098 -4.19922,-10.12011 -9.7002,-10.70801h9.7002v-10.75h-65.63379c-2.77148,0 -5.03906,-1.97362 -5.333,-4.74511l-0.67187,-6.04687h68.19531c7.64257,0 14.31933,-5.45898 15.83105,-12.93359l10.28808,-51.56641h-11.92578v4.87109l-8.90234,44.55371c-0.5459,2.56153 -2.6875,4.3252 -5.29101,4.3252h-69.45508l-8.31445,-74.1582l-0.16797,-0.50391c-2.05763,-6.71875 -8.31446,-11.3379 -15.36915,");
            WriteLiteral(@"-11.3379zM86,21.5v21.5h-21.5v10.75h21.5v21.5h10.75v-21.5h21.5v-10.75h-21.5v-21.5z""></path></g></g></svg></button>
            </div>
        </div>
        <!-- Product 3 -->
        <div class=""card col"" style=""max-width: 300px; margin: 2%"">
            <span class=""position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger""> -20% <span class=""visually-hidden"">Discount</span></span>
            <center><img src=""https://via.placeholder.com/200x200/FFFFFF/00000?text=Product"" alt=""Alternate Text"" class=""container-fluid"" /></center>
            <div class=""card-body"">
                <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                <button class=""btn"" style=""background-color: #667eea; color: white;"">Ver <svg xmlns=""http://www.w3.org/2000/svg"" x=""0px"" y=""0px""
                 width=""16"" height=""16""
                 viewBox=""0 0 172 172""
                 style="" fill:#000000;"">
                ");
            WriteLiteral("<g fill=\"none\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\"");
            BeginWriteAttribute("stroke-dasharray", " stroke-dasharray=\"", 24172, "\"", 24191, 0);
            EndWriteAttribute();
            WriteLiteral(@" stroke-dashoffset=""0"" font-family=""none"" font-weight=""none"" font-size=""none"" text-anchor=""none"" style=""mix-blend-mode: normal""><path d=""M0,172v-172h172v172z"" fill=""none""></path><g id=""original-icon"" fill=""#ffffff""><path d=""M112.875,10.75c-26.66504,0 -48.375,21.70996 -48.375,48.375c0,11.37989 4.11524,21.75196 10.75,30.02442l-53.49804,53.49804l7.55859,7.64258l53.54003,-53.54004c8.27247,6.63477 18.64453,10.75 30.02442,10.75c26.66504,0 48.375,-21.70996 48.375,-48.375c0,-26.66504 -21.70996,-48.375 -48.375,-48.375zM112.875,21.5c20.82813,0 37.625,16.79688 37.625,37.625c0,20.82813 -16.79687,37.625 -37.625,37.625c-20.82812,0 -37.625,-16.79687 -37.625,-37.625c0,-20.82812 16.79688,-37.625 37.625,-37.625z""></path></g></g></svg></button>
                <button class=""btn"" style=""background-color: #667eea; color: white;"">Agregar <svg xmlns=""http://www.w3.org/2000/svg"" x=""0px"" y=""0px""
                 width=""16"" height=""16""
                 viewBox=""0 0 172 172""
                 style="" fill:#000000;"">
              ");
            WriteLiteral("  <g fill=\"none\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\"");
            BeginWriteAttribute("stroke-dasharray", " stroke-dasharray=\"", 25352, "\"", 25371, 0);
            EndWriteAttribute();
            WriteLiteral(@" stroke-dashoffset=""0"" font-family=""none"" font-weight=""none"" font-size=""none"" text-anchor=""none"" style=""mix-blend-mode: normal""><path d=""M0,172v-172h172v172z"" fill=""none""></path><g fill=""#ffffff""><path d=""M10.75,10.75v10.75h21.5c2.30957,0 4.28321,1.51172 5.03906,3.69531l10.03614,89.52734c0.92382,8.14649 7.89453,14.31933 16.04101,14.31933c-5.45898,0.5879 -9.61621,5.20703 -9.61621,10.70801c0,5.9209 4.8291,10.75 10.75,10.75c5.9209,0 10.75,-4.8291 10.75,-10.75c0,-5.50098 -4.19922,-10.12011 -9.6582,-10.70801h51.52441c-5.45898,0.5879 -9.61621,5.20703 -9.61621,10.70801c0,5.9209 4.8291,10.75 10.75,10.75c5.9209,0 10.75,-4.8291 10.75,-10.75c0,-5.50098 -4.19922,-10.12011 -9.7002,-10.70801h9.7002v-10.75h-65.63379c-2.77148,0 -5.03906,-1.97362 -5.333,-4.74511l-0.67187,-6.04687h68.19531c7.64257,0 14.31933,-5.45898 15.83105,-12.93359l10.28808,-51.56641h-11.92578v4.87109l-8.90234,44.55371c-0.5459,2.56153 -2.6875,4.3252 -5.29101,4.3252h-69.45508l-8.31445,-74.1582l-0.16797,-0.50391c-2.05763,-6.71875 -8.31446,-11.3379 -15.36915,");
            WriteLiteral(@"-11.3379zM86,21.5v21.5h-21.5v10.75h21.5v21.5h10.75v-21.5h21.5v-10.75h-21.5v-21.5z""></path></g></g></svg></button>
            </div>
        </div>
        <!-- Product 4 -->
        <div class=""card col"" style=""max-width: 300px; margin: 2%"">
            <span class=""position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger""> -10% <span class=""visually-hidden"">Discount</span></span>
            <center><img src=""https://via.placeholder.com/200x200/FFFFFF/00000?text=Product"" alt=""Alternate Text"" class=""container-fluid"" /></center>
            <div class=""card-body"">
                <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                <button class=""btn"" style=""background-color: #667eea; color: white;"">Ver <svg xmlns=""http://www.w3.org/2000/svg"" x=""0px"" y=""0px""
                 width=""16"" height=""16""
                 viewBox=""0 0 172 172""
                 style="" fill:#000000;"">
                ");
            WriteLiteral("<g fill=\"none\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\"");
            BeginWriteAttribute("stroke-dasharray", " stroke-dasharray=\"", 27554, "\"", 27573, 0);
            EndWriteAttribute();
            WriteLiteral(@" stroke-dashoffset=""0"" font-family=""none"" font-weight=""none"" font-size=""none"" text-anchor=""none"" style=""mix-blend-mode: normal""><path d=""M0,172v-172h172v172z"" fill=""none""></path><g id=""original-icon"" fill=""#ffffff""><path d=""M112.875,10.75c-26.66504,0 -48.375,21.70996 -48.375,48.375c0,11.37989 4.11524,21.75196 10.75,30.02442l-53.49804,53.49804l7.55859,7.64258l53.54003,-53.54004c8.27247,6.63477 18.64453,10.75 30.02442,10.75c26.66504,0 48.375,-21.70996 48.375,-48.375c0,-26.66504 -21.70996,-48.375 -48.375,-48.375zM112.875,21.5c20.82813,0 37.625,16.79688 37.625,37.625c0,20.82813 -16.79687,37.625 -37.625,37.625c-20.82812,0 -37.625,-16.79687 -37.625,-37.625c0,-20.82812 16.79688,-37.625 37.625,-37.625z""></path></g></g></svg></button>
                <button class=""btn"" style=""background-color: #667eea; color: white;"">Agregar <svg xmlns=""http://www.w3.org/2000/svg"" x=""0px"" y=""0px""
                 width=""16"" height=""16""
                 viewBox=""0 0 172 172""
                 style="" fill:#000000;"">
              ");
            WriteLiteral("  <g fill=\"none\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\"");
            BeginWriteAttribute("stroke-dasharray", " stroke-dasharray=\"", 28734, "\"", 28753, 0);
            EndWriteAttribute();
            WriteLiteral(@" stroke-dashoffset=""0"" font-family=""none"" font-weight=""none"" font-size=""none"" text-anchor=""none"" style=""mix-blend-mode: normal""><path d=""M0,172v-172h172v172z"" fill=""none""></path><g fill=""#ffffff""><path d=""M10.75,10.75v10.75h21.5c2.30957,0 4.28321,1.51172 5.03906,3.69531l10.03614,89.52734c0.92382,8.14649 7.89453,14.31933 16.04101,14.31933c-5.45898,0.5879 -9.61621,5.20703 -9.61621,10.70801c0,5.9209 4.8291,10.75 10.75,10.75c5.9209,0 10.75,-4.8291 10.75,-10.75c0,-5.50098 -4.19922,-10.12011 -9.6582,-10.70801h51.52441c-5.45898,0.5879 -9.61621,5.20703 -9.61621,10.70801c0,5.9209 4.8291,10.75 10.75,10.75c5.9209,0 10.75,-4.8291 10.75,-10.75c0,-5.50098 -4.19922,-10.12011 -9.7002,-10.70801h9.7002v-10.75h-65.63379c-2.77148,0 -5.03906,-1.97362 -5.333,-4.74511l-0.67187,-6.04687h68.19531c7.64257,0 14.31933,-5.45898 15.83105,-12.93359l10.28808,-51.56641h-11.92578v4.87109l-8.90234,44.55371c-0.5459,2.56153 -2.6875,4.3252 -5.29101,4.3252h-69.45508l-8.31445,-74.1582l-0.16797,-0.50391c-2.05763,-6.71875 -8.31446,-11.3379 -15.36915,");
            WriteLiteral("-11.3379zM86,21.5v21.5h-21.5v10.75h21.5v21.5h10.75v-21.5h21.5v-10.75h-21.5v-21.5z\"></path></g></g></svg></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</center>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
